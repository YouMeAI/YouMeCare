require('dotenv').config(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

const { Telegraf, Markup } = require('telegraf'); // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è Telegram
const { OpenAI } = require('openai');            // –ù–æ–≤—ã–π —Å–ø–æ—Å–æ–± –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OpenAI SDK

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI —Å API-–∫–ª—é—á–æ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY, // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ API-–∫–ª—é—á–∞ –∏–∑ .env
});

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∞—à —Ç–æ–∫–µ–Ω Telegram
 */
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || '–í–ê–®_–¢–ï–õ–ï–ì–†–ê–ú_–¢–û–ö–ï–ù';

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram-–±–æ—Ç–∞
 */
const bot = new Telegraf(TELEGRAM_BOT_TOKEN);

/**
 * –•—Ä–∞–Ω–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
let userSessions = {};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ GPT-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É
 */
async function getAIResponse(userMessage) {
  try {
    console.log(`[GPT –∑–∞–ø—Ä–æ—Å] –í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userMessage}`);
    const completion = await openai.chat.completions.create({
      model: 'gpt-4o-mini',  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ–ª—å GPT-4o-mini
      messages: [
        { role: 'system', content: 'You are a helpful assistant trained to help with emotional and psychological issues.' },
        { role: 'user', content: userMessage },
      ],
    });

    const gptAnswer = completion.choices[0].message.content;
    console.log(`[GPT –æ—Ç–≤–µ—Ç] ${gptAnswer}`);
    return gptAnswer;
  } catch (error) {
    console.error(`[–û—à–∏–±–∫–∞ GPT] ${error.message}`);
    return '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –º–æ–≥—É —Å–µ–π—á–∞—Å –æ—Ç–≤–µ—Ç–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
 */
bot.start((ctx) => {
  const userId = ctx.from.id;
  userSessions[userId] = {
    step: 1,
    status: 'basic', // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –±–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ
  };

  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
  ctx.reply(
    `–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫. –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å?`,
    Markup.inlineKeyboard([
      [Markup.button.callback('üí¨ –î–∏–∞–ª–æ–≥', 'start_dialog'), Markup.button.callback('üìì –î–Ω–µ–≤–Ω–∏–∫', 'start_diary')]
    ])
  );
  console.log(`[Start] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.`);
});

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ "–î–∏–∞–ª–æ–≥" –∏ "–î–Ω–µ–≤–Ω–∏–∫"
 */
bot.on('callback_query', async (ctx) => {
  const userId = ctx.from.id;
  const callbackData = ctx.callbackQuery.data;

  await ctx.answerCbQuery(); // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ç–∞–π–º–∞—É—Ç–∞

  if (callbackData === 'start_dialog') {
    console.log(`[–î–∏–∞–ª–æ–≥] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥.`);
    ctx.reply('–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–≥–æ–¥–Ω—è?');
    userSessions[userId].step = 'dialog';
  }

  if (callbackData === 'start_diary') {
    console.log(`[–î–Ω–µ–≤–Ω–∏–∫] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –≤—ã–±—Ä–∞–ª –¥–Ω–µ–≤–Ω–∏–∫.`);
    ctx.reply('–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –û–∂–∏–¥–∞–π—Ç–µ.');
  }
});

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–∏–∞–ª–æ–≥–µ
 */
bot.on('text', async (ctx) => {
  const userId = ctx.from.id;
  const userText = ctx.message.text.trim();

  if (userSessions[userId].step === 'dialog') {
    ctx.replyWithChatAction('typing'); // –ü–æ–∫–∞–∑ –∞–Ω–∏–º–∞—Ü–∏–∏ "–Ω–∞–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç"

    const response = await getAIResponse(userText);

    ctx.reply(response);

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    ctx.reply(
      '–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏–∫–∏?',
      Markup.inlineKeyboard([
        [Markup.button.callback('‚úÖ –ü–æ–º–æ–≥–ª–æ', 'helped')],
        [Markup.button.callback('‚ùå –ù–µ –ø–æ–º–æ–≥–ª–æ', 'not_helped')],
        [Markup.button.callback('ü§î –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é', 'partially_helped')]
      ])
    );
    console.log(`[–î–∏–∞–ª–æ–≥] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –ø–æ–ª—É—á–∏–ª –æ—Ç–≤–µ—Ç –∏ –∫–Ω–æ–ø–∫–∏.`);
  }
});

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ "–ü–æ–º–æ–≥–ª–æ", "–ù–µ –ø–æ–º–æ–≥–ª–æ" –∏ "–ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é"
 */
bot.on('callback_query', async (ctx) => {
  const userId = ctx.from.id;
  const callbackData = ctx.callbackQuery.data;

  await ctx.answerCbQuery(); // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback

  switch (callbackData) {
    case 'helped':
      console.log(`[–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –≤—ã–±—Ä–∞–ª "–ü–æ–º–æ–≥–ª–æ".`);
      ctx.reply(
        '–†–∞–¥, —á—Ç–æ —Å–º–æ–≥ –ø–æ–º–æ—á—å! –î–ª—è —É–≥–ª—É–±–ª–µ–Ω–Ω–æ–π –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∏ —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É. –û–Ω–∞ –≤–∫–ª—é—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑—É –∏ "–î–Ω–µ–≤–Ω–∏–∫—É —á—É–≤—Å—Ç–≤".',
        Markup.inlineKeyboard([
          [Markup.button.callback('üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'subscribe')]
        ])
      );
      break;

    case 'not_helped':
      console.log(`[–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –≤—ã–±—Ä–∞–ª "–ù–µ –ø–æ–º–æ–≥–ª–æ".`);
      ctx.reply('–ñ–∞–ª—å, —á—Ç–æ —ç—Ç–æ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ. –í–æ—Ç –Ω–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞: —Å–¥–µ–ª–∞–π –≥–ª—É–±–æ–∫–∏–π –≤–¥–æ—Ö, —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –Ω–∞ –¥—ã—Ö–∞–Ω–∏–∏ 1-2 –º–∏–Ω—É—Ç—ã.');
      userSessions[userId].step = 'dialog';
      break;

    case 'partially_helped':
      console.log(`[–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –≤—ã–±—Ä–∞–ª "–ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é".`);
      ctx.reply('–Ø —Ä–∞–¥, —á—Ç–æ —á–∞—Å—Ç–∏—á–Ω–æ –ø–æ–º–æ–≥–ª–æ. –ü—Ä–æ–¥–æ–ª–∂–∏–º —Ä–∞–±–æ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–µ–º —É–≥–ª—É–±–∏—Ç—å—Å—è.');
      userSessions[userId].step = 'dialog';
      break;

    case 'subscribe':
      console.log(`[–ü–æ–¥–ø–∏—Å–∫–∞] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –≤—ã–±—Ä–∞–ª –ø–æ–¥–ø–∏—Å–∫—É.`);
      ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä –ø–æ–¥–ø–∏—Å–∫–∏! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø –∫ –≥–ª—É–±–æ–∫–æ–º—É –ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑—É.');
      break;

    default:
      console.error(`[–û—à–∏–±–∫–∞] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback_data: ${callbackData}`);
  }
});

/**
 * –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
 */
bot.launch().then(() => {
  console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
}).catch((err) => {
  console.error(`[–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞] ${err.message}`);
});
